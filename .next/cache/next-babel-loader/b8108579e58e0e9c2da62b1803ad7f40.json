{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/colbyhemond/local-repositories/test-next-cms/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport Head from \"next/head\";\nimport { Component } from 'react';\nimport { attributes, react as HomeContent } from '../content/home.md';\nimport Layout from '../components/Layout';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport navButtons from \"../config/buttons\";\n\nvar Home = /*#__PURE__*/function (_Component) {\n  _inherits(Home, _Component);\n\n  var _super = _createSuper(Home);\n\n  function Home() {\n    _classCallCheck(this, Home);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Home, [{\n    key: \"render\",\n    value: function render() {\n      var title = attributes.title,\n          jumbotron = attributes.jumbotron,\n          card1Img = attributes.card1Img;\n      return __jsx(React.Fragment, null, __jsx(Layout, {\n        home: true,\n        title: title,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 9\n        }\n      }, __jsx(Head, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }\n      }), __jsx(\"div\", {\n        className: \"jumbotron fluid\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }\n      }, __jsx(\"div\", {\n        className: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }\n      }, __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }\n      }, \"The Blended Bakery\"), __jsx(\"h4\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }\n      }, \"The best cookies ever!\"))), __jsx(\"div\", {\n        className: \"container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }\n      }, __jsx(\"div\", {\n        className: \"row d-flex justify-content-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }\n      }, __jsx(Card, {\n        style: {\n          width: '18rem'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }\n      }, __jsx(Card.Img, {\n        variant: \"top\",\n        src: card1Img,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }\n      }), __jsx(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }\n      }, __jsx(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 19\n        }\n      }, \"Card Title\"), __jsx(Card.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 19\n        }\n      }, \"Some quick example text to build on the card title and make up the bulk of the card's content.\"), __jsx(Button, {\n        variant: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 19\n        }\n      }, \"Go somewhere\"))), __jsx(Card, {\n        style: {\n          width: '18rem'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }\n      }, __jsx(Card.Img, {\n        variant: \"top\",\n        src: \"holder.js/100px180\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }\n      }), __jsx(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }\n      }, __jsx(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 19\n        }\n      }, \"Card Title\"), __jsx(Card.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 19\n        }\n      }, \"Some quick example text to build on the card title and make up the bulk of the card's content.\"), __jsx(Button, {\n        variant: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 19\n        }\n      }, \"Go somewhere\"))), __jsx(Card, {\n        style: {\n          width: '18rem'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }\n      }, __jsx(Card.Img, {\n        variant: \"top\",\n        src: \"holder.js/100px180\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }\n      }), __jsx(Card.Body, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }, __jsx(Card.Title, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 19\n        }\n      }, \"Card Title\"), __jsx(Card.Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 19\n        }\n      }, \"Some quick example text to build on the card title and make up the bulk of the card's content.\"), __jsx(Button, {\n        variant: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 19\n        }\n      }, \"Go somewhere\")))))), __jsx(\"style\", {\n        type: \"text/css\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }\n      }, \" \", \" .jumbotron {\\n            color: white;\\n            background-image: url('\".concat(jumbotron, \"');\\n            background-size: cover;\\n            height: 75vh;\\n            text-align: center;\\n          }\\n          \\n          .center{\\n            height: 100%;\\n            transform: translate(-0%, 50%);\\n          }\\n          \\n          .card {\\n            margin: 10px;\\n          }\\n          \\n          \")));\n    }\n  }]);\n\n  return Home;\n}(Component);\n\nexport { Home as default };","map":{"version":3,"sources":["/Users/colbyhemond/local-repositories/test-next-cms/pages/index.js"],"names":["Head","Component","attributes","react","HomeContent","Layout","Card","Button","navButtons","Home","title","jumbotron","card1Img","width"],"mappings":"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","sourcesContent":["import Head from \"next/head\"\nimport { Component } from 'react'\nimport { attributes, react as HomeContent } from '../content/home.md';\nimport Layout from '../components/Layout'\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\n\nimport navButtons from \"../config/buttons\";\n\nexport default class Home extends Component {\n  \n  render() {\n    \n    let { title, jumbotron, card1Img } = attributes;\n    return (\n      <>\n        <Layout home title={title}>\n\n          <Head>\n\n          </Head>\n\n          <div className=\"jumbotron fluid\">\n            <div className='center'>\n              <h1>The Blended Bakery</h1>\n              <h4>The best cookies ever!</h4>\n            </div>\n          </div>\n          <div className=\"container\">\n            <div className=\"row d-flex justify-content-center\">\n              <Card style={{ width: '18rem' }}>\n                <Card.Img variant=\"top\" src={ card1Img } />\n                <Card.Body>\n                  <Card.Title>Card Title</Card.Title>\n                  <Card.Text>\n                    Some quick example text to build on the card title and make up the bulk of\n                    the card's content.\n                  </Card.Text>\n                  <Button variant=\"primary\">Go somewhere</Button>\n                </Card.Body>\n              </Card>\n              <Card style={{ width: '18rem' }}>\n                <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\n                <Card.Body>\n                  <Card.Title>Card Title</Card.Title>\n                  <Card.Text>\n                    Some quick example text to build on the card title and make up the bulk of\n                    the card's content.\n                  </Card.Text>\n                  <Button variant=\"primary\">Go somewhere</Button>\n                </Card.Body>\n              </Card>\n              <Card style={{ width: '18rem' }}>\n                <Card.Img variant=\"top\" src=\"holder.js/100px180\" />\n                <Card.Body>\n                  <Card.Title>Card Title</Card.Title>\n                  <Card.Text>\n                    Some quick example text to build on the card title and make up the bulk of\n                    the card's content.\n                  </Card.Text>\n                  <Button variant=\"primary\">Go somewhere</Button>\n                </Card.Body>\n              </Card>\n            </div>\n          </div>\n\n        </Layout>\n        \n        <style type=\"text/css\"> {\n          ` .jumbotron {\n            color: white;\n            background-image: url('${jumbotron}');\n            background-size: cover;\n            height: 75vh;\n            text-align: center;\n          }\n          \n          .center{\n            height: 100%;\n            transform: translate(-0%, 50%);\n          }\n          \n          .card {\n            margin: 10px;\n          }\n          \n          `\n        }\n\n        </style>\n      </>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}